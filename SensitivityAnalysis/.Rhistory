print("hello world")
cite(sirad)
cite('sirad')
citation(package="sirad")
####download NHD data for PRISM#####
library("nhdplusTools")
setwd("C:/CurrentRProjects/TerrAqModel/")
setwd("C:/CurrentRProjects/TerrAqModel/NHDdata")
###Estimating LCT for hydroregions###
source("C:/CurrentRProjects/TerrAqModel/")#set wd
###Estimating LCT for hydroregions###
source("C:/CurrentRProjects/TerrAqModel/")#set wd
#create data frame to store all regions
allregions<-data.frame(matrix(nrow= , ncol= ))
###Estimating LCT for hydroregions###
source("C:/CurrentRProjects/TerrAqModel/")#set wd
citation(package="sirad")
vec=c(10,15,32,64)
vec[2]*vec[4]
vec=c(vec,"Stuart")
vec[1]*vec[3]
### Challenges 2
## Appending to a vector and data modes
vec=c(10,15,32,64)
vec[1]*vec[3]
### Challenges 2
## Appending to a vector and data modes
vec=c(10,15,32,64)
vec[2]*vec[4]
vec=c(vec,"Stuart")
secondSet=wages[wages$yearsSchool>11,c(wages$wage, wages$gender)]
#
myDF<-data.frame(matrix(ncol=3, nrow=4))
colnames(myDF)<-c("A", "B", "C")
for(i in 1:4){
print(myDF[i,])
}
#
myDF<-data.frame(matrix(1:4,ncol=3, nrow=4))
View(myDF)
colnames(myDF)<-c("A", "B", "C")
for(i in 1:4){
print(myDF[i,])
}
myDF[i,]
#
myDF<-data.frame(matrix(1:4,ncol=3, nrow=4))
View(myDF)
#
myDF<-data.frame(matrix(5:8,ncol=3, nrow=4))
colnames(myDF)<-c("A", "B", "C")
for(i in 1:4){
print(myDF[i,])
}
#*** Use a for loop to calculate the average sepal length for each species
#    in the iris data set. Don't cheat and use the `mean()` function!
iris<-read.csv("iris.csv",header=TRUE,stringsAsFactors=FALSE)
#for loops practice
#common ways we will use for loops
#####1.Put a vector of names into an existing dataframe using a loop####
lNames<-c("Ceara", "Eva", "Randi", "Beth", "Carly") #name vector
df<-data.frame(matrix(ncol=1, nrow=length(lNames))) #a blank df with one column and rows=length of vector
for(i in 1:length(lNames)){
df[1:5, ][i] <- paste(lNames[i])
}
View(df)
for(i in 1:length(lNames)){
df[i,1] <- paste(lNames[i]) #you can also just
}
View(df)
View(df)
i=1
lNames[1:5][i] <- paste("blank")
####2.Write a for loop that sequentially replaces each name in the lNames vector with the word "blank"####
for(i in 1:length(lNames)){
lNames[i] <- paste("blank")
}
#for loops practice
#common ways we will use for loops
#####1.Put a vector of names into an existing dataframe using a loop####
lNames<-c("Ceara", "Eva", "Randi", "Beth", "Carly") #name vector
####2.Write a for loop that sequentially replaces each name in the lNames vector with the word "blank"####
for(i in 1:length(lNames)){
lNames[1:5][i] <- paste("blank")
}
####3.Write a for loop that prints each name in the vector sequentially####
for(i in lNames){
print(i)
}
#for loops practice
#common ways we will use for loops
#####1.Put a vector of names into an existing dataframe using a loop####
lNames<-c("Ceara", "Eva", "Randi", "Beth", "Carly") #name vector
####3.Write a for loop that prints each name in the vector sequentially####
for(i in lNames){
print(i)
}
####4.Write a for loop to multiply each number in the first column of a dataframe by the number in the next row and add result to the second column of the dataframe####
#for the last number in the first column, multiply by 5.
numdf<-data.frame(matrix(ncol=2, nrow=6))
numdf[,1]<-c(6, 2, 4, 12, 5, 10)
for(i in 1:nrow(numdf)){
if(i<6){
numdf[i ,2] <- paste(numdf[i,1]*numdf[i+1,1])
}else{
numdf[i ,2] <- paste(numdf[i,1]*5)
}
}
View(numdf)
####5.Write a for loop to fill in a one column data frame by repeating a list of numbers (without using rep())####
nums<-seq(1, 5, by=1)
dfblank<-data.frame(matrix(ncol=1, nrow=20))
View(numdf)
View(df)
View(dfblank)
View(dfblank)
#Ceara's answer
for(i in 1:nrow(dfblank)){
if(i==1){
dfblank[(i:5),1] <- nums
} else{
dfblank[(i*5-4):(i*5),1] <- nums
}
} #end i loop
dfblank<-data.frame(matrix(ncol=1, nrow=20))
#Ceara's answer
for(i in 1:nrow(dfblank)){
dfblank[(i*5-4):(i*5),1] <- nums
}
######get UNDERC coords#####
#46.231491, -89.502287
#use extract
setwd("/Users/cearatalbot/HUC04Example/")
library(ncdf4) # package for netcdf manipulation
library(raster) # package for raster manipulation
library(rgdal) # package for geospatial analysis
library(ggplot2) # package for plotting
nc_data<-nc_open("CLM4VIC_BG1_Monthly_Tair.nc4") #opens netcdf file
lon <- ncvar_get(nc_data, "lon")
lat <- ncvar_get(nc_data, "lat", verbose = F)
t <- ncvar_get(nc_data, "time") #monthly here
tair.array <- ncvar_get(nc_data, "Tair")
fillvalue <- ncatt_get(nc_data, "Tair", "_FillValue") #get fill value
nc_close(nc_data) #closes netcdf file
tair.array[tair.array == fillvalue$value] <- NA #replaces fill value with NA
tair.slice <- tair.array[, , 1] #get first time value (time is 3rd dimension)
#dim(snow.slice)
#make data into a raster
r <- raster(t(tair.slice), xmn=min(lon), xmx=max(lon), ymn=min(lat), ymx=max(lat), crs=CRS("+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs+ towgs84=0,0,0"))
r <- flip(r, direction='y') #transpose
plot(r) #check if this looks right
pts<-cbind(-89.502287, 46.231491)
extract(r, pts) #only returns cell value
extract(r, SpatialPoints(xy), sp = T)#nope
extract(r, xy, cellnumbers = T, buffer=22000)#22000 m buffer
library(raster) # package for raster manipulation
pts<-cbind(-89.502287, 46.231491)
extract(r, pts) #only returns cell value
extract(r, SpatialPoints(xy), sp = T)#nope
extract(r, xy, cellnumbers = T, buffer=22000)#22000 m buffer
extract(r, pts, cellnumbers = T, buffer=22000)#22000 m buffer
#returns cell number: 62821
xyFromCell(r, 62821)
#####Stuart's answer
setwd("/Users/cearatalbot/HUC04Example/myWBD/WBD_National_GDB/")
#####Stuart's answer
setwd("/Users/cearatalbot/HUC04Example/myWBD/")
library(sf)
fc <- sf::st_read("WBD_National_GDB.gdb",layer="WBDHU2")
conus=fc[fc$huc2<19,]
conus_geom<-st_geometry(conus)
conusNP<-st_transform(conus_geom,crs=5243)
simp_geom<-st_simplify(conusNP,preserveTopology=FALSE,dTolerance=5000)
library(ggplot2)
ggplot(data=simp_geom)+geom_sf()+coord_sf(crs=st_crs(conus_geom))+theme_void()
colPal<-c("#B7094C". "#A01A58", "#892B64", "#723C70", "#5C4D7D",
"#455E89", "#2E6F95", "#1780A1", "#0091AD")
colPal<-c("#B7094C", "#A01A58", "#892B64", "#723C70", "#5C4D7D",
"#455E89", "#2E6F95", "#1780A1", "#0091AD")
View(simp_geom)
View(simp_geom)
View(simp_geom)
View(simp_geom)
class(simp_geom)
#####Stuart's answer
setwd("/Users/cearatalbot/")
library(sf)
LCTtable<-read.csv("RCode/terrestrial-aquatic-LCT/Validation/ButmanTable.csv")
ButmanTable<-read.csv("RCode/terrestrial-aquatic-LCT/Validation/ButmanTable.csv")
ButmanTable$LCT<-ButmanTable$Lake.efflux..Tg.C.yr.1.*.30+ButmanTable$Steam.efflux..Tg.C.yr.1.*.30+(ButmanTable$Total.lateral.flux..TgC.yr.1.)*(ButmanTable$PCT_OC/100)+ButmanTable$Lake.burial..Tg.C.yr.1.
View(ButmanTable)
sp3 = st_as_sf(data.frame(LCT=ButmanTable$LCT, geometry=simp_geom))
library(ggplot2)
ggplot(data=sp3)+geom_sf()+coord_sf(crs=st_crs(conus_geom))+theme_void()
ggplot(data=sp3)+geom_sf(aes(fill = value))+coord_sf(crs=st_crs(conus_geom))+theme_void()
ggplot(data=sp3)+geom_sf(aes(fill = LCT))+coord_sf(crs=st_crs(conus_geom))+theme_void()
for(i in 01:18){
ButmanTable$HUC[i]<-paste("HUC", i, sep="")
}
for(i in 01:18){
ButmanTable$HUC[i]<-paste("HUC ", i, sep="")
}
sp3 = st_as_sf(data.frame(LCT=ButmanTable$LCT, HUC=ButmanTable$HUC, geometry=simp_geom))
library(ggplot2)
colPal<-c("#B7094C", "#A01A58", "#892B64", "#723C70", "#5C4D7D",
"#455E89", "#2E6F95", "#1780A1", "#0091AD")
#ggplot(data=sp3)+geom_sf()+coord_sf(crs=st_crs(conus_geom))+theme_void()
ggplot(data=sp3)+geom_sf(aes(fill = LCT))+scale_fill_gradient(low ="#0091AD", high = "#B7094C")+coord_sf(crs=st_crs(conus_geom))+theme_void()
#ggplot(data=sp3)+geom_sf()+coord_sf(crs=st_crs(conus_geom))+theme_void()
ggplot(data=sp3)+geom_sf(aes(fill = LCT))+scale_fill_gradient(colours= colPal)+coord_sf(crs=st_crs(conus_geom))+theme_void()
#ggplot(data=sp3)+geom_sf()+coord_sf(crs=st_crs(conus_geom))+theme_void()
ggplot(data=sp3)+geom_sf(aes(fill = LCT))+scale_fill_gradientn(colours= colPal)+coord_sf(crs=st_crs(conus_geom))+theme_void()
#ggplot(data=sp3)+geom_sf()+coord_sf(crs=st_crs(conus_geom))+theme_void()
ggplot(data=sp3)+geom_sf(aes(fill = LCT), color="white")+scale_fill_gradientn(colours= colPal)+coord_sf(crs=st_crs(conus_geom))+theme_void()
#ggplot(data=sp3)+geom_sf()+coord_sf(crs=st_crs(conus_geom))+theme_void()
ggplot(data=sp3)+geom_sf(aes(fill = LCT), color="white")+scale_fill_gradientn(name=expression('LCT'~(Tg~C~yr^-1)),colours= colPal)+coord_sf(crs=st_crs(conus_geom))+theme_void()
#ggplot(data=sp3)+geom_sf()+coord_sf(crs=st_crs(conus_geom))+theme_void()
ggplot(data=sp3)+geom_sf(aes(fill = LCT), color="white")+scale_fill_gradientn(name=expression('LCT'~(Tg~C~yr^-1)),colours= colPal)+coord_sf(crs=st_crs(conus_geom)) #+theme_void()
#ggplot(data=sp3)+geom_sf()+coord_sf(crs=st_crs(conus_geom))+theme_void()
ggplot(data=sp3)+geom_sf(aes(fill = LCT), color="white")+scale_fill_gradientn(name=expression('LCT'~(Tg~C~yr^-1)),colours= colPal)+coord_sf(crs=st_crs(conus_geom))+theme_bw()
#ggplot(data=sp3)+geom_sf()+coord_sf(crs=st_crs(conus_geom))+theme_void()
ggplot(data=sp3)+geom_sf(aes(fill = LCT), color="white")+scale_fill_gradientn(name=expression('LCT'~(Tg~C~yr^-1)),colours= colPal)+coord_sf(crs=st_crs(conus_geom))+theme_classic()
#ggplot(data=sp3)+geom_sf()+coord_sf(crs=st_crs(conus_geom))+theme_void()
ggplot(data=sp3)+geom_sf(aes(fill = LCT), color="white")+scale_fill_gradientn(name=expression('LCT'~(Tg~C~yr^-1)),colours= colPal)+coord_sf(crs=st_crs(conus_geom))+theme_bw()
sunPal<-c("#F0CF65", "#E6B566", "#DC9C68", "#D18269", "#C7696B", "#BD4F6C")
#ggplot(data=sp3)+geom_sf()+coord_sf(crs=st_crs(conus_geom))+theme_void()
ggplot(data=sp3)+geom_sf(aes(fill = LCT), color="white")+scale_fill_gradientn(name=expression('LCT'~(Tg~C~yr^-1)),colours= sunPal)+coord_sf(crs=st_crs(conus_geom))+theme_bw()
#ggplot(data=sp3)+geom_sf()+coord_sf(crs=st_crs(conus_geom))+theme_void()
mp<-ggplot(data=sp3)+geom_sf(aes(fill = LCT), color="white")+scale_fill_gradientn(name=expression('LCT'~(Tg~C~yr^-1)),colours= sunPal)+coord_sf(crs=st_crs(conus_geom))+theme_bw()
ggsave(filename = "RCode/tam-across-conus/LCTmap.png", plot=mp, width = 3.5, height = 2.5, units= "in", device='png', dpi=320)
ggsave(filename = "RCode/tam-across-conus/LCTmap.png", plot=mp, width = 6, height = 4, units= "in", device='png', dpi=320)
setwd("/Users/cearatalbot/RCode/terrestrial-aquatic-LCT/")
ButmanTable<-read.csv("Validation/ButmanTable.csv", stringsAsFactors=F)
ButmanTable$LCT<-ButmanTable$Lake.efflux..Tg.C.yr.1.*.30+ButmanTable$Steam.efflux..Tg.C.yr.1.*.30+(ButmanTable$Total.lateral.flux..TgC.yr.1.)*(ButmanTable$PCT_OC/100)+ButmanTable$Lake.burial..Tg.C.yr.1.
View(ButmanTable)
m2Region<-read.csv("Validation/regionsArea.csv", stringsAsFactors=F)#read in areas
View(m2Region)
alt_regionm2<-data.frame(matrix(ncol=2, nrow=18))
colnames(alt_regionm2)<-c("HUC", "area")
alt_regionm2$HUC<-c(m2Region$Region[1:2], "Region03", m2Region$Region[6:11], "Region10", m2Region$Region[14:21])
View(alt_regionm2)
alt_regionm2$HUC<-c(m2Region$m2area[1:2], "Region03", m2Region$m2area[6:11], "Region10", m2Region$m2area[14:21])
for(x in 1:18){
#area weighted LCT g C m-2 yr-1
ButmanTable$LCTareal[x]<-(ButmanTable$LCT[x]*1000000000000)/alt_regionm2$area[x] #g C m-2
}
alt_regionm2<-data.frame(matrix(ncol=2, nrow=18))
colnames(alt_regionm2)<-c("HUC", "area")
alt_regionm2$HUC<-c(m2Region$Region[1:2], "Region03", m2Region$Region[6:11], "Region10", m2Region$Region[14:21])
alt_regionm2$area<-c(m2Region$m2area[1:2], "Region03", m2Region$m2area[6:11], "Region10", m2Region$m2area[14:21])
for(x in 1:18){
#area weighted LCT g C m-2 yr-1
ButmanTable$LCTareal[x]<-(ButmanTable$LCT[x]*1000000000000)/alt_regionm2$area[x] #g C m-2
}
View(m2Region)
View(alt_regionm2)
alt_regionm2<-data.frame(matrix(ncol=2, nrow=18))
colnames(alt_regionm2)<-c("HUC", "area")
alt_regionm2$HUC<-c(m2Region$Region[1:2], "Region03", m2Region$Region[6:11], "Region10", m2Region$Region[14:21])
alt_regionm2$area<-c(m2Region$m2area[1:2], sum(m2Region$m2area[3:5]), m2Region$m2area[6:11], sum(m2Region$m2area[12:13]), m2Region$m2area[14:21])
for(x in 1:18){
#area weighted LCT g C m-2 yr-1
ButmanTable$LCTareal[x]<-(ButmanTable$LCT[x]*1000000000000)/alt_regionm2$area[x] #g C m-2
}
#####Stuart's answer
setwd("/Users/cearatalbot/")
library(sf)
fc <- sf::st_read("HUC04Example/myWBD/WBD_National_GDB.gdb",layer="WBDHU2")
conus=fc[fc$huc2<19,]
conus_geom<-st_geometry(conus)
conusNP<-st_transform(conus_geom,crs=5243)
simp_geom<-st_simplify(conusNP,preserveTopology=FALSE,dTolerance=5000)
for(i in 01:18){
ButmanTable$HUC[i]<-paste("HUC ", i, sep="")
}
sp3 = st_as_sf(data.frame(LCT=ButmanTable$LCTareal, HUC=ButmanTable$HUC, geometry=simp_geom))
library(ggplot2)
colPal<-c("#B7094C", "#A01A58", "#892B64", "#723C70", "#5C4D7D",
"#455E89", "#2E6F95", "#1780A1", "#0091AD")
sunPal<-c("#F0CF65", "#E6B566", "#DC9C68", "#D18269", "#C7696B", "#BD4F6C")
mp<-ggplot(data=sp3)+geom_sf(aes(fill = LCT), color="white")+scale_fill_gradientn(name=expression('LCT'~(g~C~m^-2~yr^-1)),colours= sunPal)+coord_sf(crs=st_crs(conus_geom))+theme_bw()
mp
mp<-ggplot(data=sp3)+geom_sf(aes(fill = LCT), color="white")+scale_fill_gradientn(name=expression('LCT'~(g~C~m^-2~yr^-1)),colours= colPal)+coord_sf(crs=st_crs(conus_geom))+theme_bw()
mp
mp<-ggplot(data=sp3)+geom_sf(aes(fill = LCT), color="white")+scale_fill_gradientn(name=expression('LCT'~(g~C~m^-2~yr^-1)),colours= colPal, breaks=c(seq(0,30,5)))+coord_sf(crs=st_crs(conus_geom))+theme_bw()
mp
ggsave(filename = "RCode/tam-across-conus/LCTmapAreal.png", plot=mp, width = 6, height = 4, units= "in", device='png', dpi=320)
View(simp_geom)
setwd("/Users/cearatalbot/RCode/terrestrial-aquatic-LCT/")
setwd("/Users/cearatalbot/RCode/terrestrial-aquatic-LCT/")
library(ggplot2)
library(reshape2)
RegionsOut<-read.csv("Validation/storedRegions_original.csv", stringsAsFactors=F)
RegionsOut<-read.csv("Validation/storedRegions.csv", stringsAsFactors=F)
dfPFT<-read.csv("Validation/regionsPFT.csv", stringsAsFactors=F)#write out PFT to keep
m2Region<-read.csv("Validation/regionsArea.csv", stringsAsFactors=F)#read in areas
ListRegions<-c("01", "02", "03W", "03S", "03N","04", "05", "06",
"07", "08", "09", "10L", "10U", "11", "12", "13",
"14", "15", "16", "17", "18")
pftNam<-c("EG", "DE", "GR", "SH")
#Annual Summary calculation
sumRegions<-data.frame(matrix(ncol=6, nrow=0))
colnames(sumRegions)<-c("pft", "Variable", "Value", "Tmax", "Precip", "Region")
for(x in 1:21){
subRegion<-RegionsOut[RegionsOut$Region==paste("Region",ListRegions[x],sep=""),]
pftSum1<-data.frame(matrix(ncol=6, nrow=0))
colnames(pftSum1)<-c("pft", "Variable", "Value", "Tmax", "Precip")
for(i in 1:4){
pftSum<-data.frame(matrix(ncol=5, nrow=37))
colnames(pftSum)<-c("pft", "Variable", "Value", "Tmax", "Precip")
subPFT<-subRegion[subRegion$PFT==pftNam[i],]
pftSum[,1]<-pftNam[i]
pftSum[,2:3]<-summaryTAM(df=subPFT)
pftSum[,4]<-subRegion$tmaxGrads[1]
pftSum[,5]<-subRegion$pptGrads[1]
pftSum1<-rbind(pftSum1, pftSum)
}#end i loop
pftSum1$Region<-paste("Region", ListRegions[x], sep="")
sumRegions<-rbind(sumRegions, pftSum1)
}#end x loop
source("Functions/summaryTAM_MSVersion.R") #summary function
setwd("/Users/cearatalbot/RCode/terrestrial-aquatic-LCT/")
source("Functions/summaryTAM_MSVersion.R") #summary function
library(ggplot2)
library(reshape2)
RegionsOut<-read.csv("Validation/storedRegions.csv", stringsAsFactors=F)
dfPFT<-read.csv("Validation/regionsPFT.csv", stringsAsFactors=F)#write out PFT to keep
m2Region<-read.csv("Validation/regionsArea.csv", stringsAsFactors=F)#read in areas
ListRegions<-c("01", "02", "03W", "03S", "03N","04", "05", "06",
"07", "08", "09", "10L", "10U", "11", "12", "13",
"14", "15", "16", "17", "18")
pftNam<-c("EG", "DE", "GR", "SH")
#Annual Summary calculation
sumRegions<-data.frame(matrix(ncol=6, nrow=0))
colnames(sumRegions)<-c("pft", "Variable", "Value", "Tmax", "Precip", "Region")
for(x in 1:21){
subRegion<-RegionsOut[RegionsOut$Region==paste("Region",ListRegions[x],sep=""),]
pftSum1<-data.frame(matrix(ncol=6, nrow=0))
colnames(pftSum1)<-c("pft", "Variable", "Value", "Tmax", "Precip")
for(i in 1:4){
pftSum<-data.frame(matrix(ncol=5, nrow=37))
colnames(pftSum)<-c("pft", "Variable", "Value", "Tmax", "Precip")
subPFT<-subRegion[subRegion$PFT==pftNam[i],]
pftSum[,1]<-pftNam[i]
pftSum[,2:3]<-summaryTAM(df=subPFT)
pftSum[,4]<-subRegion$tmaxGrads[1]
pftSum[,5]<-subRegion$pptGrads[1]
pftSum1<-rbind(pftSum1, pftSum)
}#end i loop
pftSum1$Region<-paste("Region", ListRegions[x], sep="")
sumRegions<-rbind(sumRegions, pftSum1)
}#end x loop
sumRegions$Value<-as.numeric(sumRegions$Value)
data_wide <- dcast(sumRegions, pft + Region + Tmax + Precip ~ Variable, value.var = "Value", fun.aggregate = mean)
View(data_wide)
#make LCT 0 if unrealistic neg NPP/Cw/Cr is neg
for(i in 1:nrow(data_wide)){
if(data_wide$Cwmin[i] < 0){
data_wide$SumLdoc[i]<-0
data_wide$SumD[i]<-0
} else if (data_wide$NPP < 0){
data_wide$SumLdoc[i]<-0
data_wide$SumD[i]<-0
} else if (data_wide$Cr < 0){
data_wide$SumLdoc[i]<-0
data_wide$SumD[i]<-0
}}
totalRegions<-data.frame(matrix(ncol=5, nrow=21))
colnames(totalRegions)<-c("Region", "EG_gC", "DE_gC", "SH_gC", "GR_gC")
totalRegions<-data.frame(matrix(ncol=6, nrow=21))
colnames(totalRegions)<-c("Region", "EG_cm", "DE_cm", "SH_cm", "GR_cm", "total")
for(x in 1:21){
regional<-data_wide[data_wide$Region==paste("Region", ListRegions[x], sep=""),]
totalRegions$Region[x]<-paste("Region", ListRegions[x], sep="")
totalRegions$DE_cm[x]<-(((dfPFT$dec_weighted[x]+(0.5*dfPFT$mx_weighted[x]))/100)*m2Region$m2area[x])*as.numeric(regional$SumD[1])
totalRegions$EG_cm[x]<-(((dfPFT$con_weighted[x]+(0.5*dfPFT$mx_weighted[x]))/100)*m2Region$m2area[x])*as.numeric(regional$SumD[2])
totalRegions$GR_cm[x]<-(((dfPFT$gr_weighted[x]+dfPFT$cr_weighted[x])/100)*m2Region$m2area[x])*as.numeric(regional$SumD[3])
totalRegions$SH_cm[x]<-((dfPFT$sh_weighted[x]/100)*m2Region$m2area[x])*as.numeric(regional$SumD[4])
totalRegions$total[x]<-(totalRegions$EG_cm[x]+totalRegions$DE_cm[x]+totalRegions$SH_cm[x]+totalRegions$GR_cm[x])/((((dfPFT$dec_weighted[x]+(0.5*dfPFT$mx_weighted[x]))/100)*m2Region$m2area[x])+((((dfPFT$con_weighted[x]+(0.5*dfPFT$mx_weighted[x]))/100)*m2Region$m2area[x])+(((dfPFT$gr_weighted[x]+dfPFT$cr_weighted[x])/100)*m2Region$m2area[x])+((dfPFT$sh_weighted[x]/100)*m2Region$m2area[x])))
}
View(totalRegions)
totalR03<-((totalRegions$total[3]*m2Region$m2area[3])+(totalRegions$total[4]*m2Region$m2area[4])+(totalRegions$total[5]*m2Region$m2area[5]))/(m2Region$m2area[3]+m2Region$m2area[4]+m2Region$m2area[5])
totalR10<-((totalRegions$total[13]*m2Region$m2area[13])+(totalRegions$total[14]*m2Region$m2area[14]))/(m2Region$m2area[13]+m2Region$m2area[14])
subTotals<-data.frame(cbind(totalRegions$Region, totalRegions$total))
colnames(subTotals)<-c("Region", "cm_m2")
subTotals$Region[3]<-"Region03"
subTotals$TgC[3]<-totalR03
subTotals<-subTotals[-4,]
subTotals<-subTotals[-4,]
subTotals$Region[10]<-"Region10"
subTotals$TgC[10]<-totalR10
subTotals<-subTotals[-11,]
View(subTotals)
totalRegions<-data.frame(matrix(ncol=6, nrow=21))
colnames(totalRegions)<-c("Region", "EG_cm", "DE_cm", "SH_cm", "GR_cm", "total")
for(x in 1:21){
regional<-data_wide[data_wide$Region==paste("Region", ListRegions[x], sep=""),]
totalRegions$Region[x]<-paste("Region", ListRegions[x], sep="")
totalRegions$DE_cm[x]<-(((dfPFT$dec_weighted[x]+(0.5*dfPFT$mx_weighted[x]))/100)*m2Region$m2area[x])*as.numeric(regional$SumD[1])
totalRegions$EG_cm[x]<-(((dfPFT$con_weighted[x]+(0.5*dfPFT$mx_weighted[x]))/100)*m2Region$m2area[x])*as.numeric(regional$SumD[2])
totalRegions$GR_cm[x]<-(((dfPFT$gr_weighted[x]+dfPFT$cr_weighted[x])/100)*m2Region$m2area[x])*as.numeric(regional$SumD[3])
totalRegions$SH_cm[x]<-((dfPFT$sh_weighted[x]/100)*m2Region$m2area[x])*as.numeric(regional$SumD[4])
totalRegions$total[x]<-(totalRegions$EG_cm[x]+totalRegions$DE_cm[x]+totalRegions$SH_cm[x]+totalRegions$GR_cm[x])/((((dfPFT$dec_weighted[x]+(0.5*dfPFT$mx_weighted[x]))/100)*m2Region$m2area[x])+((((dfPFT$con_weighted[x]+(0.5*dfPFT$mx_weighted[x]))/100)*m2Region$m2area[x])+(((dfPFT$gr_weighted[x]+dfPFT$cr_weighted[x])/100)*m2Region$m2area[x])+((dfPFT$sh_weighted[x]/100)*m2Region$m2area[x])))
}
totalR03<-((totalRegions$total[3]*m2Region$m2area[3])+(totalRegions$total[4]*m2Region$m2area[4])+(totalRegions$total[5]*m2Region$m2area[5]))/(m2Region$m2area[3]+m2Region$m2area[4]+m2Region$m2area[5])
totalR10<-((totalRegions$total[13]*m2Region$m2area[13])+(totalRegions$total[14]*m2Region$m2area[14]))/(m2Region$m2area[13]+m2Region$m2area[14])
subTotals<-data.frame(cbind(totalRegions$Region, totalRegions$total))
colnames(subTotals)<-c("Region", "cm_m2")
subTotals$Region[3]<-"Region03"
subTotals$cm_m2[3]<-totalR03
subTotals<-subTotals[-4,]
subTotals<-subTotals[-4,]
subTotals$Region[10]<-"Region10"
subTotals$cm_m2[10]<-totalR10
subTotals<-subTotals[-11,]
###areal LCT
##NPP###
totalRegionsLCT<-data.frame(matrix(ncol=6, nrow=21)) #empty to store calculations
colnames(totalRegionsLCT)<-c("Region", "EG_gC", "DE_gC", "SH_gC", "GR_gC", "total")
for(x in 1:21){
regional<-data_wide[data_wide$Region==paste("Region", ListRegions[x], sep=""),]
totalRegionsLCT$Region[x]<-paste("Region", ListRegions[x], sep="")
#total LCT in g C yr-1 for each HUC
totalRegionsLCT$DE_gC[x]<-(((dfPFT$dec_weighted[x]+(0.5*dfPFT$mx_weighted[x]))/100)*m2Region$m2area[x])*as.numeric(regional$SumLdoc[1])
totalRegionsLCT$EG_gC[x]<-(((dfPFT$con_weighted[x]+(0.5*dfPFT$mx_weighted[x]))/100)*m2Region$m2area[x])*as.numeric(regional$SumLdoc[2])
totalRegionsLCT$GR_gC[x]<-(((dfPFT$gr_weighted[x]+dfPFT$cr_weighted[x])/100)*m2Region$m2area[x])*as.numeric(regional$SumLdoc[3])
totalRegionsLCT$SH_gC[x]<-((dfPFT$sh_weighted[x]/100)*m2Region$m2area[x])*as.numeric(regional$SumLdoc[4])
#to g C m-2 yr-1
totalRegionsLCT$total[x]<-(totalRegionsLCT$EG_gC[x]+totalRegionsLCT$DE_gC[x]+totalRegionsLCT$SH_gC[x]+totalRegionsLCT$GR_gC[x])/((((dfPFT$dec_weighted[x]+(0.5*dfPFT$mx_weighted[x]))/100)*m2Region$m2area[x])+((((dfPFT$con_weighted[x]+(0.5*dfPFT$mx_weighted[x]))/100)*m2Region$m2area[x])+(((dfPFT$gr_weighted[x]+dfPFT$cr_weighted[x])/100)*m2Region$m2area[x])+((dfPFT$sh_weighted[x]/100)*m2Region$m2area[x])))
}
View(totalRegionsLCT)
#calculate NPP for modified HUCs (to match Butman et al. 2016)
totalR03<-(((totalRegionsLCT$total[3]*m2Region$m2area[3])+(totalRegionsLCT$total[4]*m2Region$m2area[4])+(totalRegionsLCT$total[5]*m2Region$m2area[5]))/(m2Region$m2area[3]+m2Region$m2area[4]+m2Region$m2area[5]))
totalR10<-(((totalRegionsLCT$total[13]*m2Region$m2area[13])+(totalRegionsLCT$total[14]*m2Region$m2area[14]))/(m2Region$m2area[13]+m2Region$m2area[14]))
subTotalsLCT<-data.frame(cbind(totalRegionsLCT$Region, totalRegionsLCT$total))
colnames(subTotalsLCT)<-c("Region", "LCTgcm2")
subTotalsLCT$Region[3]<-"Region03"
subTotalsLCT$LCTgcm2[3]<-totalR03
subTotalsLCT<-subTotalsLCT[-4,]
subTotalsLCT<-subTotalsLCT[-4,]
subTotalsLCT$Region[10]<-"Region10"
subTotalsLCT$TgC[10]<-totalR10
#calculate NPP for modified HUCs (to match Butman et al. 2016)
totalR03<-(((totalRegionsLCT$total[3]*m2Region$m2area[3])+(totalRegionsLCT$total[4]*m2Region$m2area[4])+(totalRegionsLCT$total[5]*m2Region$m2area[5]))/(m2Region$m2area[3]+m2Region$m2area[4]+m2Region$m2area[5]))
totalR10<-(((totalRegionsLCT$total[13]*m2Region$m2area[13])+(totalRegionsLCT$total[14]*m2Region$m2area[14]))/(m2Region$m2area[13]+m2Region$m2area[14]))
subTotalsLCT<-data.frame(cbind(totalRegionsLCT$Region, totalRegionsLCT$total))
colnames(subTotalsLCT)<-c("Region", "LCTgcm2")
subTotalsLCT$Region[3]<-"Region03"
subTotalsLCT$LCTgcm2[3]<-totalR03
subTotalsLCT<-subTotalsLCT[-4,]
subTotalsLCT<-subTotalsLCT[-4,]
subTotalsLCT$Region[10]<-"Region10"
subTotalsLCT$LCTgcm2[10]<-totalR10
subTotalsLCT<-subTotalsNPP[-11,]
subTotalsLCT<-subTotalsLCT-11,]
subTotalsLCT<-subTotalsLCT[-11,]
View(subTotalsLCT)
df<-cbind(subTotals, subTotalsLCT$LCTgcm2)
View(df)
colnames(df)<-c("HUC", "Q_cm.m2.yr", "LCT_g.m2.yr")
View(df)
df$Q_cm.m2.yr<-round(df$Q_cm.m2.yr, 3)
setwd("/Users/cearatalbot/RCode/tam-across-conus/")
write.csv(df, "arealExportsCONUS.csv", row.names=F)
setwd("/Users/cearatalbot/RCode/terrestrial-aquatic-LCT/SensitivityAnalysis/")
output<-read.csv("SASoil_base.csv", stringsAsFactors = F)
subOut<-output[output$Variable=="SumLdoc" & output$Variable=="SumD", ]
output<-read.csv("SASoil_base.csv", stringsAsFactors = F)
View(output)
subOut<-output[output$Variable=="SumLdoc" & output$Variable=="SumD", ]
View(subOut)
subOut<-output[output$Variable=="SumLdoc", ]
View(subOut)
subOut<-rbind(subOut,output[output$Variable=="SumD", ] )
View(subOut)
View(subTotals)
View(subTotalsLCT)
