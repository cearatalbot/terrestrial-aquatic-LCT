scale_x_discrete(labels=c(expression("K"[wue]),expression(lambda[S1]), expression("f"[S1]), expression("W"[MAX1]), expression("K"[h]), expression("T"[opt]),expression("Q"[10]["s"]),expression("K"[f]), expression("f"), expression("W"[2]^o)))+
scale_color_manual(values=c(GroupCols), " Parameter \n type")+
annotate("text", y=19, x=0.8, label=cornerLab[i], size=4.5)
gb<-gb+borderTheme0.5
print(gb)
fiName<-paste(varList[i], "Box",".png", sep="")
#ggsave(filename = fiName, plot=gb, width = 6, height = 2.9, units= "in", device='png', dpi=320)
} else if (i==5){
gb<-ggplot(VarInta, aes(x=ParamNew_f, y=value_abs))+geom_boxplot(aes(colour=Group_f), position=position_dodge(0.4), width=0.6)+
scale_y_continuous(limits=c(0, 20), breaks=c(seq(0, 20, 5)))+
labs(y=" Mean absolute \n change (%)", x="Parameter")+
scale_x_discrete(labels=c(expression("K"[h]),expression("Q"[10]["s"]), expression("K"[wue]), expression(lambda[S1]), expression("f"[S1]), expression("T"[opt]),expression("B"[p]),expression("b"[i]), expression("W"[2]^o), expression("K"[s])))+
scale_color_manual(values=c(GroupCols), " Parameter \n type")+
annotate("text", y=19, x=0.8, label=cornerLab[i], size=4.5)
gb<-gb+borderTheme0.5
print(gb)
fiName<-paste(varList[i], "Box",".png", sep="")
#ggsave(filename = fiName, plot=gb, width = 6, height = 2.9, units= "in", device='png', dpi=320)
} else if(i==6){
gb<-ggplot(VarInta, aes(x=ParamNew_f, y=value_abs))+geom_boxplot(aes(colour=Group_f), position=position_dodge(0.4), width=0.6)+
scale_y_continuous(limits=c(0, 20), breaks=c(seq(0, 20, 5)))+
labs(y=" Mean absolute \n change (%)", x="Parameter")+
scale_x_discrete(labels=c(expression("K"[wue]),expression(delta[S1]), expression("f"[S1]), expression("T"[opt]), expression("K"[f]), expression("f"),expression("W"[2]^o),expression("a"[w]),expression("B"[p]), expression("W"[MAX1])))+
scale_color_manual(values=c(GroupCols), " Parameter \n type")+
annotate("text", y=19, x=0.8, label=cornerLab[i], size=4.5)
gb<-gb+borderTheme0.5
print(gb)
fiName<-paste(varList[i], "Box",".png", sep="")
#ggsave(filename = fiName, plot=gb, width = 6, height = 2.9, units= "in", device='png', dpi=320)
} else if (i==7){
gb<-ggplot(VarInta, aes(x=ParamNew_f, y=value_abs))+geom_boxplot(aes(colour=Group_f), position=position_dodge(0.4), width=0.6)+
scale_y_continuous(limits=c(0, 20), breaks=c(seq(0, 20, 5)))+
labs(y=" Mean absolute \n change (%)", x="Parameter")+
scale_x_discrete(labels=c(expression("f"[S1]),expression("K"[wue]), expression(delta[S2]), expression("T"[opt]), expression("K"[f]), expression("f"),expression("W"[2]^o),expression("L"[max]),expression("B"[p]), expression("W"[MAX1])))+
scale_color_manual(values=c(GroupCols), " Parameter \n type")+
annotate("text", y=19, x=0.8, label=cornerLab[i], size=4.5)
gb<-gb+borderTheme0.5
print(gb)
fiName<-paste(varList[i], "Box",".png", sep="")
#ggsave(filename = fiName, plot=gb, width = 6, height = 2.9, units= "in", device='png', dpi=320)
} else if (i==8){
gb<-ggplot(VarInta, aes(x=ParamNew_f, y=value_abs))+geom_boxplot(aes(colour=Group_f), position=position_dodge(0.4), width=0.6)+
scale_y_continuous(limits=c(0, 20), breaks=c(seq(0, 20, 5)))+
labs(y=" Mean absolute \n change (%)", x="Parameter")+
scale_x_discrete(labels=c(expression("Q"[10]["s"]),expression("K"[wue]), expression(delta[S3]), expression(rho[S2]), expression(rho[S1]), expression("T"[opt]),expression(lambda[S1]),expression("B"[p]),expression("K"[f]), expression("f")))+
scale_color_manual(values=c(GroupCols), " Parameter \n type")+
annotate("text", y=19, x=0.8, label=cornerLab[i], size=4.5)
gb<-gb+borderTheme0.5
print(gb)
fiName<-paste(varList[i], "Box",".png", sep="")
#ggsave(filename = fiName, plot=gb, width = 6, height = 2.9, units= "in", device='png', dpi=320)
} else if(i==9){
gb<-ggplot(VarInta, aes(x=ParamNew_f, y=value_abs))+geom_boxplot(aes(colour=Group_f), position=position_dodge(0.4), width=0.6)+
scale_y_continuous(limits=c(0, 20), breaks=c(seq(0, 20, 5)))+
labs(y=" Mean absolute \n change (%)", x="Parameter")+
scale_x_discrete(labels=c(expression("Q"[10]["s"]),expression(delta[S4]), expression("K"[wue]), expression(rho[S2]), expression(rho[S1]), expression("T"[opt]),expression("f"),expression(lambda[S1]),expression("K"[f]), expression("B"[p])))+
scale_color_manual(values=c(GroupCols), " Parameter \n type")+
annotate("text", y=19, x=0.8, label=cornerLab[i], size=4.5)
gb<-gb+borderTheme0.5
print(gb)
fiName<-paste(varList[i], "Box",".png", sep="")
#ggsave(filename = fiName, plot=gb, width = 6, height = 2.9, units= "in", device='png', dpi=320)
}
dfTop1<-data.frame(matrix(ncol=2, nrow=15))
colnames(dfTop1)<-c("variable", "TopParam")
dfTop1$variable<-varList[i]
dfTop1$TopParam<-VarOrder[1:15]
dfTop<-rbind(dfTop, dfTop1)
}
View(dfTop)
df1<-data.frame(matrix(ncol=ncol(change_long), nrow=0))
for(i in 1:length(varList)){
df<-change_long[change_long$variable==varList[i], ]
df1<-rbind(df1, df)
} #df1 is the change data frame for only the variables i need
df1$value_abs<-abs(df1$value)
dfTop<-data.frame(matrix(ncol=2, nrow=0)) #df to store top 10 params for each variable
colnames(dfTop)<-c("variable", "TopParam")
i=1
VarInt<-df1[df1$variable==varList[i],]
for(x in 1:nrow(VarInt)){
#VarInt$Param_f<-factor(VarInt$Param, levels=VarOrder)
VarInt$Group[x]<-ParamGroup[ParamGroup$Param==VarInt$Param[x], 3]
VarInt$reName[x]<-ParamGroup[ParamGroup$Param==VarInt$Param[x], 2]
}
i=1
VarInt<-df1[df1$variable==varList[i],]
x=1
#VarInt$Param_f<-factor(VarInt$Param, levels=VarOrder)
VarInt$Group[x]<-ParamGroup[ParamGroup$Param==VarInt$Param[x], 3]
#VarInt$Param_f<-factor(VarInt$Param, levels=VarOrder)
VarInt$Group[x]<-ParamGroup[ParamGroup$Param==VarInt$Param[x], 3]
ParamGroup$Param<-c("Amax", "Ad", "Kf", "Tmin", "Tmax", "Topt",
"Kvpd", "PARhalf", "k", "Lmax", "Ka", "Q10v",
"Kh", "Q10s", "f", "Kwue"," Wmax1", "SLW",
"Cfrac", "Kw", "deltaS1", "Ks",
"lambdaS1", "lambdaS3", "bi", "Tstar", "W20",
"Kr", "aw", "l", "lt", "r", "Bp",
"Wmax2", "Kcwd", "ag", "rhoS1", "rhoS2", "rhoS3",
"deltaS3", "deltaS4", "deltaS2"," lambdaS2", "fS1")
ParamGroup$Group<-c("Plant", "Plant", "Plant", "Plant", "Plant", "Plant",
"Plant", "Plant", "Plant", "Plant", "Plant", "Plant",
"Soil", "Soil", "Soil", "Plant",
"Water", "Plant", "Plant", "Plant", "Soil",
"Water", "Soil", "Soil", "Water", "Water", "Soil",
"Plant", "Plant", "Plant", "Plant", "Water", "Water", "Water",
"Soil", "Plant", "Soil", "Soil", "Soil", "Soil", "Soil",
"Soil", "Soil", "Soil")
View(ParamGroup)
#assign params to a group
ParamGroup<-data.frame(matrix(ncol=3, nrow=44))
colnames(ParamGroup)<-c("Param", "reName","Group")
ParamGroup$Param<-c("Amax", "Ad", "Kf", "Tmin", "Tmax", "Topt",
"Kvpd", "PARhalf", "k", "Lmax", "Ka", "Q10v",
"Kh", "Q10s", "f", "Kwue"," Wmax1", "SLW",
"Cfrac", "Kw", "deltaS1", "Ks",
"lambdaS1", "lambdaS3", "bi", "Tstar", "W20",
"Kr", "aw", "l", "lt", "r", "Bp",
"Wmax2", "Kcwd", "ag", "rhoS1", "rhoS2", "rhoS3",
"deltaS3", "deltaS4", "deltaS2"," lambdaS2", "fS1")
ParamGroup$reName<-c("A[max]", "A[d]", "K[f]", "T[min]", "T[max]", "T[opt]",
"K[vpd]", "PAR[1/2]", "k", "L[max]",
"K[a]", "Q[10,v]", "K[h]", "Q[10,s]", "f",  "K[wue]",
"W[max,1]", "SLW", "C[frac]", "K[w]",
"delta[S1]",
"K[s]", "lambda[S1]", "lambda[S3]", "b[i]", "T*", "W[2]^o", "K[r]",
"a[w]", "l", "l[t]", "r", "B[p]", "W[max,2]", "K[cwd]",  "a[g]",
"rho[S1]","rho[S2]","rho[S3]",
"deltaS3", "deltaS4", "deltaS2", "lambdaS2", "fS1")
ParamGroup$Group<-c("Plant", "Plant", "Plant", "Plant", "Plant", "Plant",
"Plant", "Plant", "Plant", "Plant", "Plant", "Plant",
"Soil", "Soil", "Soil", "Plant",
"Water", "Plant", "Plant", "Plant", "Soil",
"Water", "Soil", "Soil", "Water", "Water", "Soil",
"Plant", "Plant", "Plant", "Plant", "Water", "Water", "Water",
"Soil", "Plant", "Soil", "Soil", "Soil", "Soil", "Soil",
"Soil", "Soil", "Soil")
varList<-c("Ddoc", "Qbdoc", "NPP", "Cd1", "Cd2", "Co", "Cf2","Cm", "Cp")
cornerLab<-c("A.", "B.", "C.",
"D.", "E.", "F.",
"G.", "H.", "I.")
df1<-data.frame(matrix(ncol=ncol(change_long), nrow=0))
for(i in 1:length(varList)){
df<-change_long[change_long$variable==varList[i], ]
df1<-rbind(df1, df)
} #df1 is the change data frame for only the variables i need
ParamGroup[ParamGroup$Param==VarInt$Param[x], 3]
VarInt$Param[x]
VarInt<-df1[df1$variable==varList[i],]
VarInt$Param[x]
View(VarInt)
varList[i]
#assign params to a group
ParamGroup<-data.frame(matrix(ncol=3, nrow=44))
colnames(ParamGroup)<-c("Param", "reName","Group")
ParamGroup$Param<-c("Amax", "Ad", "Kf", "Tmin", "Tmax", "Topt",
"Kvpd", "PARhalf", "k", "Lmax", "Ka", "Q10v",
"Kh", "Q10s", "f", "Kwue"," Wmax1", "SLW",
"Cfrac", "Kw", "deltaS1", "Ks",
"lambdaS1", "lambdaS3", "bi", "Tstar", "W20",
"Kr", "aw", "l", "lt", "r", "Bp",
"Wmax2", "Kcwd", "ag", "rhoS1", "rhoS2", "rhoS3",
"deltaS3", "deltaS4", "deltaS2"," lambdaS2", "fS1")
ParamGroup$reName<-c("A[max]", "A[d]", "K[f]", "T[min]", "T[max]", "T[opt]",
"K[vpd]", "PAR[1/2]", "k", "L[max]",
"K[a]", "Q[10,v]", "K[h]", "Q[10,s]", "f",  "K[wue]",
"W[max,1]", "SLW", "C[frac]", "K[w]",
"delta[S1]",
"K[s]", "lambda[S1]", "lambda[S3]", "b[i]", "T*", "W[2]^o", "K[r]",
"a[w]", "l", "l[t]", "r", "B[p]", "W[max,2]", "K[cwd]",  "a[g]",
"rho[S1]","rho[S2]","rho[S3]",
"deltaS3", "deltaS4", "deltaS2", "lambdaS2", "fS1")
ParamGroup$Group<-c("Plant", "Plant", "Plant", "Plant", "Plant", "Plant",
"Plant", "Plant", "Plant", "Plant", "Plant", "Plant",
"Soil", "Soil", "Soil", "Plant",
"Water", "Plant", "Plant", "Plant", "Soil",
"Water", "Soil", "Soil", "Water", "Water", "Soil",
"Plant", "Plant", "Plant", "Plant", "Water", "Water", "Water",
"Soil", "Plant", "Soil", "Soil", "Soil", "Soil", "Soil",
"Soil", "Soil", "Soil")
varList<-c("LCT1", "LCT2", "NPP", "Cdoc1", "Cdoc2", "Cs1", "Cs2","Cs3", "Cs4")
cornerLab<-c("A.", "B.", "C.",
"D.", "E.", "F.",
"G.", "H.", "I.")
df1<-data.frame(matrix(ncol=ncol(change_long), nrow=0))
for(i in 1:length(varList)){
df<-change_long[change_long$variable==varList[i], ]
df1<-rbind(df1, df)
} #df1 is the change data frame for only the variables i need
df1$value_abs<-abs(df1$value)
dfTop<-data.frame(matrix(ncol=2, nrow=0)) #df to store top 10 params for each variable
colnames(dfTop)<-c("variable", "TopParam")
for(i in 1:length(varList)){
VarInt<-df1[df1$variable==varList[i],]
for(x in 1:nrow(VarInt)){
#VarInt$Param_f<-factor(VarInt$Param, levels=VarOrder)
VarInt$Group[x]<-ParamGroup[ParamGroup$Param==VarInt$Param[x], 3]
VarInt$reName[x]<-ParamGroup[ParamGroup$Param==VarInt$Param[x], 2]
}
VarInt2<-aggregate(VarInt$value_abs, by=list(VarInt$reName), FUN=median)
colnames(VarInt2)<-c("Param", "median")
VarOrder<-VarInt2[order(VarInt2$median, decreasing=T),]
VarOrder<-as.character(unique(VarOrder$Param))
VarInta<-data.frame(matrix(ncol=6, nrow=0))
for(y in 1:10){
VarIntb<-VarInt[VarInt$reName==VarOrder[y], ]
VarInta<-rbind(VarInta, VarIntb)
}
VarInta$ParamNew_f<-factor(VarInta$reName, levels=VarOrder[1:10])
VarInta$Group_f<-factor(VarInta$Group, levels=c("Plant", "Water", "Soil"))
#loop to make plots
if (i==1){
gb<-ggplot(VarInta, aes(x=ParamNew_f, y=value_abs))+geom_boxplot(aes(colour=Group_f), position=position_dodge(0.4), width=0.6)+
scale_y_continuous(limits=c(0, 20), breaks=c(seq(0, 20, 5)))+
labs(y=" Mean absolute \n change (%)", x="Parameter")+
scale_x_discrete(labels=c(expression("K"[wue]),expression(lambda[S1]), expression("f"[S1]), expression("W"[MAX1]), expression("Q"[10]["s"]), expression("K"[h]),expression("T"[opt]),expression("K"[f]), expression("f"), expression("W"[2]^o)))+
scale_color_manual(values=c(GroupCols), " Parameter \n type")+
annotate("text", y=19, x=0.8, label=cornerLab[i], size=4.5)
gb<-gb+borderTheme0.5
print(gb)
fiName<-paste(varList[i], "Box",".png", sep="")
#ggsave(filename = fiName, plot=gb, width = 6, height = 2.9, units= "in", device='png', dpi=320)
} else if (i==2){
gb<-ggplot(VarInta, aes(x=ParamNew_f, y=value_abs))+geom_boxplot(aes(colour=Group_f), position=position_dodge(0.4), width=0.6)+
scale_y_continuous(limits=c(0, 20), breaks=c(seq(0, 20, 5)))+
labs(y=" Mean absolute \n change (%)", x="Parameter")+
scale_x_discrete(labels=c(expression("K"[h]),expression("K"[wue]), expression(lambda[S1]), expression("f"[S1]), expression("Q"[10]["s"]), expression("B"[p]),expression("b"[i]),expression("K"[s]), expression("T"[opt]), expression("T"^"*")))+
scale_color_manual(values=c(GroupCols), " Parameter \n type")+
annotate("text", y=19, x=0.8, label=cornerLab[i], size=4.5)
gb<-gb+borderTheme0.5
print(gb)
fiName<-paste(varList[i], "Box",".png", sep="")
#ggsave(filename = fiName, plot=gb, width = 6, height = 2.9, units= "in", device='png', dpi=320)
} else if (i==3){
gb<-ggplot(VarInta, aes(x=ParamNew_f, y=value_abs))+geom_boxplot(aes(colour=Group_f), position=position_dodge(0.4), width=0.6)+
scale_y_continuous(limits=c(0, 20), breaks=c(seq(0, 20, 5)))+
labs(y=" Mean absolute \n change (%)", x="Parameter")+
scale_x_discrete(labels=c(expression("K"[wue]),expression("T"[opt]), expression("K"[f]), expression("f"), expression("W"[2]^o), expression("B"[p]),expression("L"[max]),expression("W"[MAX1]), expression("b"[i]), expression("Q"[10]["v"])))+
scale_color_manual(values=c(GroupCols), " Parameter \n type")+
annotate("text", y=19, x=0.8, label=cornerLab[i], size=4.5)
gb<-gb+borderTheme0.5
print(gb)
fiName<-paste(varList[i], "Box",".png", sep="")
#ggsave(filename = fiName, plot=gb, width = 6, height = 2.9, units= "in", device='png', dpi=320)
} else if (i==4){
gb<-ggplot(VarInta, aes(x=ParamNew_f, y=value_abs))+geom_boxplot(aes(colour=Group_f), position=position_dodge(0.4), width=0.6)+
scale_y_continuous(limits=c(0, 20), breaks=c(seq(0, 20, 5)))+
labs(y=" Mean absolute \n change (%)", x="Parameter")+
scale_x_discrete(labels=c(expression("K"[wue]),expression(lambda[S1]), expression("f"[S1]), expression("W"[MAX1]), expression("K"[h]), expression("T"[opt]),expression("Q"[10]["s"]),expression("K"[f]), expression("f"), expression("W"[2]^o)))+
scale_color_manual(values=c(GroupCols), " Parameter \n type")+
annotate("text", y=19, x=0.8, label=cornerLab[i], size=4.5)
gb<-gb+borderTheme0.5
print(gb)
fiName<-paste(varList[i], "Box",".png", sep="")
#ggsave(filename = fiName, plot=gb, width = 6, height = 2.9, units= "in", device='png', dpi=320)
} else if (i==5){
gb<-ggplot(VarInta, aes(x=ParamNew_f, y=value_abs))+geom_boxplot(aes(colour=Group_f), position=position_dodge(0.4), width=0.6)+
scale_y_continuous(limits=c(0, 20), breaks=c(seq(0, 20, 5)))+
labs(y=" Mean absolute \n change (%)", x="Parameter")+
scale_x_discrete(labels=c(expression("K"[h]),expression("Q"[10]["s"]), expression("K"[wue]), expression(lambda[S1]), expression("f"[S1]), expression("T"[opt]),expression("B"[p]),expression("b"[i]), expression("W"[2]^o), expression("K"[s])))+
scale_color_manual(values=c(GroupCols), " Parameter \n type")+
annotate("text", y=19, x=0.8, label=cornerLab[i], size=4.5)
gb<-gb+borderTheme0.5
print(gb)
fiName<-paste(varList[i], "Box",".png", sep="")
#ggsave(filename = fiName, plot=gb, width = 6, height = 2.9, units= "in", device='png', dpi=320)
} else if(i==6){
gb<-ggplot(VarInta, aes(x=ParamNew_f, y=value_abs))+geom_boxplot(aes(colour=Group_f), position=position_dodge(0.4), width=0.6)+
scale_y_continuous(limits=c(0, 20), breaks=c(seq(0, 20, 5)))+
labs(y=" Mean absolute \n change (%)", x="Parameter")+
scale_x_discrete(labels=c(expression("K"[wue]),expression(delta[S1]), expression("f"[S1]), expression("T"[opt]), expression("K"[f]), expression("f"),expression("W"[2]^o),expression("a"[w]),expression("B"[p]), expression("W"[MAX1])))+
scale_color_manual(values=c(GroupCols), " Parameter \n type")+
annotate("text", y=19, x=0.8, label=cornerLab[i], size=4.5)
gb<-gb+borderTheme0.5
print(gb)
fiName<-paste(varList[i], "Box",".png", sep="")
#ggsave(filename = fiName, plot=gb, width = 6, height = 2.9, units= "in", device='png', dpi=320)
} else if (i==7){
gb<-ggplot(VarInta, aes(x=ParamNew_f, y=value_abs))+geom_boxplot(aes(colour=Group_f), position=position_dodge(0.4), width=0.6)+
scale_y_continuous(limits=c(0, 20), breaks=c(seq(0, 20, 5)))+
labs(y=" Mean absolute \n change (%)", x="Parameter")+
scale_x_discrete(labels=c(expression("f"[S1]),expression("K"[wue]), expression(delta[S2]), expression("T"[opt]), expression("K"[f]), expression("f"),expression("W"[2]^o),expression("L"[max]),expression("B"[p]), expression("W"[MAX1])))+
scale_color_manual(values=c(GroupCols), " Parameter \n type")+
annotate("text", y=19, x=0.8, label=cornerLab[i], size=4.5)
gb<-gb+borderTheme0.5
print(gb)
fiName<-paste(varList[i], "Box",".png", sep="")
#ggsave(filename = fiName, plot=gb, width = 6, height = 2.9, units= "in", device='png', dpi=320)
} else if (i==8){
gb<-ggplot(VarInta, aes(x=ParamNew_f, y=value_abs))+geom_boxplot(aes(colour=Group_f), position=position_dodge(0.4), width=0.6)+
scale_y_continuous(limits=c(0, 20), breaks=c(seq(0, 20, 5)))+
labs(y=" Mean absolute \n change (%)", x="Parameter")+
scale_x_discrete(labels=c(expression("Q"[10]["s"]),expression("K"[wue]), expression(delta[S3]), expression(rho[S2]), expression(rho[S1]), expression("T"[opt]),expression(lambda[S1]),expression("B"[p]),expression("K"[f]), expression("f")))+
scale_color_manual(values=c(GroupCols), " Parameter \n type")+
annotate("text", y=19, x=0.8, label=cornerLab[i], size=4.5)
gb<-gb+borderTheme0.5
print(gb)
fiName<-paste(varList[i], "Box",".png", sep="")
#ggsave(filename = fiName, plot=gb, width = 6, height = 2.9, units= "in", device='png', dpi=320)
} else if(i==9){
gb<-ggplot(VarInta, aes(x=ParamNew_f, y=value_abs))+geom_boxplot(aes(colour=Group_f), position=position_dodge(0.4), width=0.6)+
scale_y_continuous(limits=c(0, 20), breaks=c(seq(0, 20, 5)))+
labs(y=" Mean absolute \n change (%)", x="Parameter")+
scale_x_discrete(labels=c(expression("Q"[10]["s"]),expression(delta[S4]), expression("K"[wue]), expression(rho[S2]), expression(rho[S1]), expression("T"[opt]),expression("f"),expression(lambda[S1]),expression("K"[f]), expression("B"[p])))+
scale_color_manual(values=c(GroupCols), " Parameter \n type")+
annotate("text", y=19, x=0.8, label=cornerLab[i], size=4.5)
gb<-gb+borderTheme0.5
print(gb)
fiName<-paste(varList[i], "Box",".png", sep="")
#ggsave(filename = fiName, plot=gb, width = 6, height = 2.9, units= "in", device='png', dpi=320)
}
dfTop1<-data.frame(matrix(ncol=2, nrow=15))
colnames(dfTop1)<-c("variable", "TopParam")
dfTop1$variable<-varList[i]
dfTop1$TopParam<-VarOrder[1:15]
dfTop<-rbind(dfTop, dfTop1)
}
setwd("/Users/cearatalbot/RCode/terrestrial-aquatic-LCT/")
############################################################
####RUNNING MODEL FOR PFTS and CLIMATES FOR EACH REGION#####
############################################################
library(deSolve)
#Source functions
source("Functions/TAM_MSVersion.R") #model code
source("Functions/summaryTAM_MSVersion.R") #summary function
source("Functions/findInitials_MSVersion.R") #initial conditions finder
#read in files
dfWeather<-read.csv("Validation/regionsWeather.csv")#weather for each HUC
dfPhenol<-read.csv("Validation/regionsPhenology.csv")#phenology each HUC (based on weather)
dfPFT<-read.csv("Validation/regionsPFT.csv")#PFT converage each HUC
PFT_i0<-read.csv("Validation/PFT_i0.csv", stringsAsFactors=F)#wood initials
PFT_i0_cp<-read.csv("Validation/PFT_i0_cp.csv", stringsAsFactors=F)#CS4 initials
PFT_i0_cr<-read.csv("Validation/PFT_i0_cr.csv", stringsAsFactors=F)#Cr initials
PFT_i0_cm<-read.csv("Validation/PFT_i0_cm.csv", stringsAsFactors=F)#CS3 initials
PFT_i0_cf2<-read.csv("Validation/PFT_i0_cf2.csv", stringsAsFactors=F)#CS2 initials
PFT_i0_co<-read.csv("Validation/PFT_i0_co.csv", stringsAsFactors=F)#CS1 initials
##########Analyze output and comparison plots#############
#####################read in files made earlier in script#####
library(ggplot2)
library(reshape2)
RegionsOut<-read.csv("Validation/storedRegions.csv", stringsAsFactors=F)
dfPFT<-read.csv("Validation/regionsPFT.csv", stringsAsFactors=F)#write out PFT to keep
m2Region<-read.csv("Validation/regionsArea.csv", stringsAsFactors=F)#read in areas
runoff<-read.csv("Validation/regionsRunoff.csv", stringsAsFactors=F)#read in areas
ListRegions<-c("01", "02", "03W", "03S", "03N","04", "05", "06",
"07", "08", "09", "10L", "10U", "11", "12", "13",
"14", "15", "16", "17", "18")
pftNam<-c("EG", "DE", "GR", "SH")
#Annual Summary calculation
sumRegions<-data.frame(matrix(ncol=6, nrow=0))
colnames(sumRegions)<-c("pft", "Variable", "Value", "Tmax", "Precip", "Region")
for(x in 1:21){
subRegion<-RegionsOut[RegionsOut$Region==paste("Region",ListRegions[x],sep=""),]
pftSum1<-data.frame(matrix(ncol=6, nrow=0))
colnames(pftSum1)<-c("pft", "Variable", "Value", "Tmax", "Precip")
for(i in 1:4){
pftSum<-data.frame(matrix(ncol=5, nrow=37))
colnames(pftSum)<-c("pft", "Variable", "Value", "Tmax", "Precip")
subPFT<-subRegion[subRegion$PFT==pftNam[i],]
pftSum[,1]<-pftNam[i]
pftSum[,2:3]<-summaryTAM(df=subPFT)
pftSum[,4]<-subRegion$tmaxGrads[1]
pftSum[,5]<-subRegion$pptGrads[1]
pftSum1<-rbind(pftSum1, pftSum)
}#end i loop
pftSum1$Region<-paste("Region", ListRegions[x], sep="")
sumRegions<-rbind(sumRegions, pftSum1)
}#end x loop
sumRegions$Value<-as.numeric(sumRegions$Value)
data_wide <- dcast(sumRegions, pft + Region + Tmax + Precip ~ Variable, value.var = "Value", fun.aggregate = mean)
#make LCT 0 if unrealistic neg NPP/Cw/Cr is neg
for(i in 1:nrow(data_wide)){
if(data_wide$Cwmin[i] < 0){
data_wide$SumLdoc[i]<-0
} else if (data_wide$NPP < 0){
data_wide$SumLdoc[i]<-0
} else if (data_wide$Cr < 0){
data_wide$SumLdoc[i]<-0
}}
totalRegions<-data.frame(matrix(ncol=5, nrow=21))
colnames(totalRegions)<-c("Region", "EG_gC", "DE_gC", "SH_gC", "GR_gC")
for(x in 1:21){
regional<-data_wide[data_wide$Region==paste("Region", ListRegions[x], sep=""),]
totalRegions$Region[x]<-paste("Region", ListRegions[x], sep="")
totalRegions$DE_gC[x]<-(((dfPFT$dec_weighted[x]+(0.5*dfPFT$mx_weighted[x]))/100)*m2Region$m2area[x])*as.numeric(regional$SumLdoc[1])
totalRegions$EG_gC[x]<-(((dfPFT$con_weighted[x]+(0.5*dfPFT$mx_weighted[x]))/100)*m2Region$m2area[x])*as.numeric(regional$SumLdoc[2])
totalRegions$GR_gC[x]<-(((dfPFT$gr_weighted[x]+dfPFT$cr_weighted[x])/100)*m2Region$m2area[x])*as.numeric(regional$SumLdoc[3])
totalRegions$SH_gC[x]<-((dfPFT$sh_weighted[x]/100)*m2Region$m2area[x])*as.numeric(regional$SumLdoc[4])
}
totalRegions$total<-(totalRegions$EG_gC+totalRegions$DE_gC+totalRegions$SH_gC+totalRegions$GR_gC)/1000000000000 #to TgC
totalR03<-((totalRegions$total[3]*m2Region$m2area[3])+(totalRegions$total[4]*m2Region$m2area[4])+(totalRegions$total[5]*m2Region$m2area[5]))/(m2Region$m2area[3]+m2Region$m2area[4]+m2Region$m2area[5])
totalR10<-((totalRegions$total[13]*m2Region$m2area[13])+(totalRegions$total[14]*m2Region$m2area[14]))/(m2Region$m2area[13]+m2Region$m2area[14])
subTotals<-data.frame(cbind(totalRegions$Region, totalRegions$total))
colnames(subTotals)<-c("Region", "TgC")
subTotals$Region[3]<-"Region03"
subTotals$TgC[3]<-totalR03
subTotals<-subTotals[-4,]
subTotals<-subTotals[-4,]
subTotals$Region[10]<-"Region10"
subTotals$TgC[10]<-totalR10
subTotals<-subTotals[-11,]
ButmanTable<-read.csv("Validation/ButmanTable.csv", stringsAsFactors=F)
ButmanTable$LCT<-ButmanTable$Lake.efflux..Tg.C.yr.1.*.30+ButmanTable$Steam.efflux..Tg.C.yr.1.*.30+(ButmanTable$Total.lateral.flux..TgC.yr.1.)*(ButmanTable$PCT_OC/100)+ButmanTable$Lake.burial..Tg.C.yr.1.
#Hotchkiss et al 2015: ~28% of stream/river emissions are from terrestrial DOC
AllLCT<-data.frame(cbind(subTotals, ButmanTable$LCT))
colnames(AllLCT)<-c("Region", "model", "Butman")
AllLCT$model<-as.numeric(AllLCT$model)
AllLCT$RegNum<-1:nrow(AllLCT)
borderTheme0.5<-theme(panel.grid.major = element_blank(),panel.grid.minor = element_blank(),
panel.background = element_rect(colour = "black", size=1, fill=NA),
strip.background = element_blank(),
panel.spacing = unit(0.3, "lines"), axis.ticks.length = unit(0.2, "lines"),
text = element_text(size = 12),legend.background=element_blank(),
legend.key = element_rect(fill = NA), aspect.ratio = 1)
library(ggrepel)
plot1<-ggplot(data=AllLCT, aes(x=Butman, y=model))+geom_point(size=0.7)+
#geom_text(label=AllLCT$Region)+
scale_x_continuous(limits=c(0,12), breaks=seq(0, 12, 3), expand=c(0,0))+
scale_y_continuous(limits=c(0,12), breaks=seq(0, 12, 3), expand=c(0,0))+
geom_abline(slope=1, intercept = 0, linetype="dashed", color="grey")+
labs(y=expression('Modeled LCT'~(Tg~C~yr^-1)),x=expression('Literature LCT'~(Tg~C~yr^-1)))+
geom_text(label=AllLCT$RegNum, hjust = -0.1, nudge_x = 0.2,size=2.5)+
annotate("text", x=1, y=11, label= "A.", size=4.5)+
borderTheme0.5
plot1
#ggsave(filename = "Validation/ButmanPointsLCT.png", plot=plot1, width = 3.5, height = 2.5, units= "in", device='png', dpi=320)
colnames(AllLCT)<-c("Region", "ModelLCT", "ButmanLCT", "RegNum")
###NPP###
totalRegionsNPP<-data.frame(matrix(ncol=6, nrow=21)) #empty to store calculations
colnames(totalRegionsNPP)<-c("Region", "EG_gC", "DE_gC", "SH_gC", "GR_gC", "total")
for(x in 1:21){
regional<-data_wide[data_wide$Region==paste("Region", ListRegions[x], sep=""),]
totalRegionsNPP$Region[x]<-paste("Region", ListRegions[x], sep="")
#total NPP in g C yr-1 for each HUC
totalRegionsNPP$DE_gC[x]<-(((dfPFT$dec_weighted[x]+(0.5*dfPFT$mx_weighted[x]))/100)*m2Region$m2area[x])*as.numeric(regional$NPP[1])
totalRegionsNPP$EG_gC[x]<-(((dfPFT$con_weighted[x]+(0.5*dfPFT$mx_weighted[x]))/100)*m2Region$m2area[x])*as.numeric(regional$NPP[2])
totalRegionsNPP$GR_gC[x]<-(((dfPFT$gr_weighted[x]+dfPFT$cr_weighted[x])/100)*m2Region$m2area[x])*as.numeric(regional$NPP[3])
totalRegionsNPP$SH_gC[x]<-((dfPFT$sh_weighted[x]/100)*m2Region$m2area[x])*as.numeric(regional$NPP[4])
#to g C m-2 yr-1
totalRegionsNPP$total[x]<-(totalRegionsNPP$EG_gC[x]+totalRegionsNPP$DE_gC[x]+totalRegionsNPP$SH_gC[x]+totalRegionsNPP$GR_gC[x])/((((dfPFT$dec_weighted[x]+(0.5*dfPFT$mx_weighted[x]))/100)*m2Region$m2area[x])+((((dfPFT$con_weighted[x]+(0.5*dfPFT$mx_weighted[x]))/100)*m2Region$m2area[x])+(((dfPFT$gr_weighted[x]+dfPFT$cr_weighted[x])/100)*m2Region$m2area[x])+((dfPFT$sh_weighted[x]/100)*m2Region$m2area[x])))
}
#calculate NPP for modified HUCs (to match Butman et al. 2016)
totalR03<-(((totalRegionsNPP$total[3]*m2Region$m2area[3])+(totalRegionsNPP$total[4]*m2Region$m2area[4])+(totalRegionsNPP$total[5]*m2Region$m2area[5]))/(m2Region$m2area[3]+m2Region$m2area[4]+m2Region$m2area[5]))
totalR10<-(((totalRegionsNPP$total[13]*m2Region$m2area[13])+(totalRegionsNPP$total[14]*m2Region$m2area[14]))/(m2Region$m2area[13]+m2Region$m2area[14]))
subTotalsNPP<-data.frame(cbind(totalRegionsNPP$Region, totalRegionsNPP$total))
colnames(subTotalsNPP)<-c("Region", "TgC")
subTotalsNPP$Region[3]<-"Region03"
subTotalsNPP$TgC[3]<-totalR03
subTotalsNPP<-subTotalsNPP[-4,]
subTotalsNPP<-subTotalsNPP[-4,]
subTotalsNPP$Region[10]<-"Region10"
subTotalsNPP$TgC[10]<-totalR10
subTotalsNPP<-subTotalsNPP[-11,]
AllLCT<-cbind(subTotalsNPP, ButmanTable$NPP, ButmanTable$NPPsd)
colnames(AllLCT)<-c("Region", "model", "Butman", "Butmansd")
AllLCT$model<-as.numeric(AllLCT$model)
AllLCT$RegNum<-1:nrow(AllLCT)
plot2<-ggplot(data=AllLCT, aes(x=Butman, y=model))+
scale_x_continuous(limits=c(0,1300), breaks=seq(0, 1200, 300), expand=c(0,0))+
scale_y_continuous(limits=c(0,1300), breaks=seq(0, 1200, 300), expand=c(0,0))+geom_abline(slope=1, intercept = 0, linetype="dashed", color="grey")+
labs(y=expression('Modeled NPP'~(g~C~m^-2~yr^-1)),x=expression('Literature NPP'~(g~C~m^-2~yr^-1)))+
geom_pointrange(aes(xmin=Butman-Butmansd, xmax=Butman+Butmansd), size=0.1, color="black")+
geom_point(size=0.7, color="black")+
geom_text(label=AllLCT$RegNum, hjust = -0.5, nudge_x = 0.3,size=2.5)+
annotate("text", x=100, y=1200, label= "B.", size=4.5)+
borderTheme0.5
plot2
totalRegionsLCTareal<-data.frame(matrix(ncol=5, nrow=21))
colnames(totalRegionsLCTareal)<-c("Region", "EG_gC", "DE_gC", "SH_gC", "GR_gC")
for(x in 1:21){
regional<-data_wide[data_wide$Region==paste("Region", ListRegions[x], sep=""),]
totalRegionsLCTareal$Region[x]<-paste("Region", ListRegions[x], sep="")
#area weighted LCT g C m-2 yr-1
totalRegionsLCTareal$DE_gC[x]<-(((dfPFT$dec_weighted[x]+(0.5*dfPFT$mx_weighted[x]))/100)*m2Region$m2area[x])*as.numeric(regional$SumLdoc[1])/m2Region$m2area[x]
totalRegionsLCTareal$EG_gC[x]<-(((dfPFT$con_weighted[x]+(0.5*dfPFT$mx_weighted[x]))/100)*m2Region$m2area[x])*as.numeric(regional$SumLdoc[2])/m2Region$m2area[x]
totalRegionsLCTareal$GR_gC[x]<-(((dfPFT$gr_weighted[x]+dfPFT$cr_weighted[x])/100)*m2Region$m2area[x])*as.numeric(regional$SumLdoc[3])/m2Region$m2area[x]
totalRegionsLCTareal$SH_gC[x]<-((dfPFT$sh_weighted[x]/100)*m2Region$m2area[x])*as.numeric(regional$SumLdoc[4])/m2Region$m2area[x]
}
totalRegionsLCTareal$total<-(totalRegionsLCTareal$EG_gC+totalRegionsLCTareal$DE_gC+totalRegionsLCTareal$SH_gC+totalRegionsLCTareal$GR_gC)
for(i in 1:nrow(totalRegionsLCTareal)){
subdwide<-data_wide[data_wide$Region==totalRegionsLCTareal$Region[i], ]
totalRegionsLCTareal$Precip[i]<-subdwide$Precip[1]
totalRegionsLCTareal$Tmax[i]<-subdwide$Tmax[1]
}
arealplusclim<-data.frame(cbind(totalRegionsLCTareal$Region, totalRegionsLCTareal$total, totalRegionsLCTareal$Precip, totalRegionsLCTareal$Tmax))
colnames(arealplusclim)<-c("Region", "LCT", "Precip", "Tmax")
for(i in 1:nrow(arealplusclim)){
arealplusclim$RegNum[i]<-unlist(strsplit(arealplusclim$Region[i], split="Region"))[2]
}
arealplusclim$Tmax<-as.numeric(arealplusclim$Tmax)
arealplusclim$Precip<-as.numeric(arealplusclim$Precip)
arealplusclim$LCT<-as.numeric(arealplusclim$LCT)
plot3<-ggplot(data=arealplusclim, aes(x=Precip, y=LCT, group=Tmax, colour=Tmax))+
scale_x_continuous(limits=c(25,162), breaks=seq(25, 150, 25), expand=c(0,0))+
scale_y_continuous(limits=c(0,25), breaks=seq(0, 25, 5), expand=c(0,0))+
labs(y=expression('LCT'~(g~C~m^-2~yr^-1)),x=expression('Precipitaiton'~(cm~yr^-1)))+
scale_color_viridis_c("Temp (C)", option="B", alpha = 0.8, begin = 0, end = 0.9)+
geom_point(size=1)+
geom_text_repel(label=arealplusclim$RegNum,size=2, color="black")+
borderTheme0.5
plot3
ggsave(filename = "Validation/ArealLCT.png", plot=plot3, width = 3.6, height = 2.6, units= "in", device='png', dpi=320)
plot3<-ggplot(data=arealplusclim, aes(x=Precip, y=LCT, group=Tmax, colour=Tmax))+
scale_x_continuous(limits=c(25,162), breaks=seq(25, 150, 25), expand=c(0,0))+
scale_y_continuous(limits=c(0,25), breaks=seq(0, 25, 5), expand=c(0,0))+
labs(y=expression('LCT'~(g~C~m^-2~yr^-1)),x=expression('Precipitation'~(cm~yr^-1)))+
scale_color_viridis_c("Temp (C)", option="B", alpha = 0.8, begin = 0, end = 0.9)+
geom_point(size=1)+
geom_text_repel(label=arealplusclim$RegNum,size=2, color="black")+
borderTheme0.5
plot3
ggsave(filename = "Validation/ArealLCT.png", plot=plot3, width = 3.6, height = 2.6, units= "in", device='png', dpi=320)
