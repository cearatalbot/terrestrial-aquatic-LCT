print("hello world")
cite(sirad)
cite('sirad')
citation(package="sirad")
####download NHD data for PRISM#####
library("nhdplusTools")
setwd("C:/CurrentRProjects/TerrAqModel/")
setwd("C:/CurrentRProjects/TerrAqModel/NHDdata")
###Estimating LCT for hydroregions###
source("C:/CurrentRProjects/TerrAqModel/")#set wd
###Estimating LCT for hydroregions###
source("C:/CurrentRProjects/TerrAqModel/")#set wd
#create data frame to store all regions
allregions<-data.frame(matrix(nrow= , ncol= ))
###Estimating LCT for hydroregions###
source("C:/CurrentRProjects/TerrAqModel/")#set wd
citation(package="sirad")
vec=c(10,15,32,64)
vec[2]*vec[4]
vec=c(vec,"Stuart")
vec[1]*vec[3]
### Challenges 2
## Appending to a vector and data modes
vec=c(10,15,32,64)
vec[1]*vec[3]
### Challenges 2
## Appending to a vector and data modes
vec=c(10,15,32,64)
vec[2]*vec[4]
vec=c(vec,"Stuart")
secondSet=wages[wages$yearsSchool>11,c(wages$wage, wages$gender)]
#
myDF<-data.frame(matrix(ncol=3, nrow=4))
colnames(myDF)<-c("A", "B", "C")
for(i in 1:4){
print(myDF[i,])
}
#
myDF<-data.frame(matrix(1:4,ncol=3, nrow=4))
View(myDF)
colnames(myDF)<-c("A", "B", "C")
for(i in 1:4){
print(myDF[i,])
}
myDF[i,]
#
myDF<-data.frame(matrix(1:4,ncol=3, nrow=4))
View(myDF)
#
myDF<-data.frame(matrix(5:8,ncol=3, nrow=4))
colnames(myDF)<-c("A", "B", "C")
for(i in 1:4){
print(myDF[i,])
}
#*** Use a for loop to calculate the average sepal length for each species
#    in the iris data set. Don't cheat and use the `mean()` function!
iris<-read.csv("iris.csv",header=TRUE,stringsAsFactors=FALSE)
############################################################
####RUNNING MODEL FOR PFTS and CLIMATES FOR EACH REGION#####
############################################################
library(deSolve)
setwd("/Users/cearatalbot/RCode/terrestrial-aquatic-LCT/")
source("Functions/summaryTAM_MSVersion.R") #summary function
source("Functions/findInitials_MSVersion.R") #initial conditions finder
##########Analyze output and comparison plots#############
#####################read in files made earlier in script#####
library(ggplot2)
library(reshape2)
RegionsOut<-read.csv("Validation/storedRegions_original.csv", stringsAsFactors=F)
dfPFT<-read.csv("Validation/regionsPFT.csv", stringsAsFactors=F)#write out PFT to keep
m2Region<-read.csv("Validation/regionsArea.csv", stringsAsFactors=F)#read in areas
RegionsOut<-read.csv("Validation/storedRegions.csv", stringsAsFactors=F)
ListRegions<-c("01", "02", "03W", "03S", "03N","04", "05", "06",
"07", "08", "09", "10L", "10U", "11", "12", "13",
"14", "15", "16", "17", "18")
pftNam<-c("EG", "DE", "GR", "SH")
#Annual Summary calculation
sumRegions<-data.frame(matrix(ncol=6, nrow=0))
colnames(sumRegions)<-c("pft", "Variable", "Value", "Tmax", "Precip", "Region")
for(x in 1:21){
subRegion<-RegionsOut[RegionsOut$Region==paste("Region",ListRegions[x],sep=""),]
pftSum1<-data.frame(matrix(ncol=6, nrow=0))
colnames(pftSum1)<-c("pft", "Variable", "Value", "Tmax", "Precip")
for(i in 1:4){
pftSum<-data.frame(matrix(ncol=5, nrow=37))
colnames(pftSum)<-c("pft", "Variable", "Value", "Tmax", "Precip")
subPFT<-subRegion[subRegion$PFT==pftNam[i],]
pftSum[,1]<-pftNam[i]
pftSum[,2:3]<-summaryTAM(df=subPFT)
pftSum[,4]<-subRegion$tmaxGrads[1]
pftSum[,5]<-subRegion$pptGrads[1]
pftSum1<-rbind(pftSum1, pftSum)
}#end i loop
pftSum1$Region<-paste("Region", ListRegions[x], sep="")
sumRegions<-rbind(sumRegions, pftSum1)
}#end x loop
sumRegions$Value<-as.numeric(sumRegions$Value)
data_wide <- dcast(sumRegions, pft + Region + Tmax + Precip ~ Variable, value.var = "Value", fun.aggregate = mean)
#make LCT 0 if unrealistic neg NPP/Cw/Cr is neg
for(i in 1:nrow(data_wide)){
if(data_wide$Cwmin[i] < 0){
data_wide$SumLdoc[i]<-0
} else if (data_wide$NPP < 0){
data_wide$SumLdoc[i]<-0
} else if (data_wide$Cr < 0){
data_wide$SumLdoc[i]<-0
}}
totalRegions<-data.frame(matrix(ncol=5, nrow=21))
colnames(totalRegions)<-c("Region", "EG_gC", "DE_gC", "SH_gC", "GR_gC")
for(x in 1:21){
regional<-data_wide[data_wide$Region==paste("Region", ListRegions[x], sep=""),]
totalRegions$Region[x]<-paste("Region", ListRegions[x], sep="")
totalRegions$DE_gC[x]<-(((dfPFT$dec_weighted[x]+(0.5*dfPFT$mx_weighted[x]))/100)*m2Region$m2area[x])*as.numeric(regional$SumLdoc[1])
totalRegions$EG_gC[x]<-(((dfPFT$con_weighted[x]+(0.5*dfPFT$mx_weighted[x]))/100)*m2Region$m2area[x])*as.numeric(regional$SumLdoc[2])
totalRegions$GR_gC[x]<-(((dfPFT$gr_weighted[x]+dfPFT$cr_weighted[x])/100)*m2Region$m2area[x])*as.numeric(regional$SumLdoc[3])
totalRegions$SH_gC[x]<-((dfPFT$sh_weighted[x]/100)*m2Region$m2area[x])*as.numeric(regional$SumLdoc[4])
}
totalRegions$total<-(totalRegions$EG_gC+totalRegions$DE_gC+totalRegions$SH_gC+totalRegions$GR_gC)/1000000000000 #to TgC
View(totalRegions)
totalRegions$total
write.csv(totalRegions, "tempRegions.csv", row.names=F)
totalR03<-((totalRegions$total[3]*m2Region$m2area[3])+(totalRegions$total[4]*m2Region$m2area[4])+(totalRegions$total[5]*m2Region$m2area[5]))/(m2Region$m2area[3]+m2Region$m2area[4]+m2Region$m2area[5])
totalR10<-((totalRegions$total[13]*m2Region$m2area[13])+(totalRegions$total[14]*m2Region$m2area[14]))/(m2Region$m2area[13]+m2Region$m2area[14])
subTotals<-data.frame(cbind(totalRegions$Region, totalRegions$total))
View(subTotals)
colnames(subTotals)<-c("Region", "TgC")
subTotals$Region[3]<-"Region03"
subTotals$TgC[3]<-totalR03
subTotals<-subTotals[-4,]
subTotals<-subTotals[-4,]
subTotals$Region[10]<-"Region10"
subTotals$TgC[10]<-totalR10
subTotals<-subTotals[-11,]
View(subTotals)
write.csv(subTotals, "tempRegions2.csv", row.names=F)
